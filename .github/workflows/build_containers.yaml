name: Build container image for GHCR
on:
  push:
    branches:
      - devel
      - RELEASE_*
  workflow_dispatch:
  schedule:
    - cron: '0 18 * * 5'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        base:
          - {image: 'rocker/r-ver', amdtag: '4.4.1', armtag: '4.4.1', outname: 'r-ver'}
          - {image: 'rocker/rstudio', amdtag: '4.4.1', armtag: '4.4.1', outname: 'bioconductor_docker'}
          - {image: 'rocker/tidyverse', amdtag: '4.4.1', armtag: 'N/A', outname: 'tidyverse'}
          - {image: 'rocker/ml-verse', amdtag: '4.4.1', armtag: 'N/A', outname: 'ml-verse'}
          - {image: 'rocker/shiny', amdtag: '4.4.1', armtag: 'N/A', outname: 'shiny'}

    name: Build branch images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Free root space
        uses: almahmoud/free-root-space@main
        with:
          verbose: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for container image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository_owner }}/${{ matrix.base.outname }}
          tags: |
            type=raw,value={{branch}}

      - name: Set comma-separated list with all repository names
        id: images
        run: |
          IMG=${{ steps.meta.outputs.tags }}
          REPOLIST="docker.io/$IMG"
          REPOLIST="ghcr.io/$IMG,$REPOLIST"
          # Add tag with tag 3.xx as well as RELEASE_3_xx
          if [[ $IMG = *"RELEASE_"* ]]; then
            REPOLIST="$(echo $REPOLIST | sed 's/:RELEASE_3_/:3./g'),$REPOLIST"
          fi
          # Add tag with R version (based on amd64)
          docker pull ${{ matrix.base.image }}:${{ matrix.base.amdtag }}
          RVER=$(docker inspect ${{ matrix.base.image }}:${{ matrix.base.amdtag }} | jq -r '.[].Config.Env[]|select(match("^R_VERSION"))|.[index("=")+1:]')
          REPOLIST="$(echo $REPOLIST | sed "s/,/-R-$RVER,/g")-R-$RVER,$REPOLIST"
                    # Also add alternative without _docker when in name
          if [[ $REPOLIST == *"_docker"* ]]; then
            REPOLIST="$(echo $REPOLIST | sed 's/_docker//g'),$REPOLIST"
          fi
          echo list=$REPOLIST >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Define Repository Name and Release Version
        run: |
            repo=$(echo "${GITHUB_REPOSITORY/\//-}")
            echo "reponame=$repo" >> $GITHUB_ENV
            echo "release_tag=$(echo '${{ steps.images.outputs.list }}' | awk -F',' '{print $1}')" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_tag }}
          release_name: Release ${{ env.release_tag }}
          draft: false
          prerelease: false

      - uses: eWaterCycle/setup-singularity@v7
      - name : Docker2Singularity
        run: |
          mkdir -p /tmp/sing
          imagename=$(echo "${{ steps.images.outputs.list }}" | awk -F',' '{print $1}')
          docker run -v /var/run/docker.sock:/var/run/docker.sock -v /tmp/sing:/output --privileged -t --rm quay.io/singularity/docker2singularity $imagename
          ls /tmp/sing
      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          tag_name: ${{ env.release_tag }}
        run: |
          hub release edit $(find /tmp/sing -type f -name "*.sif" -printf "-a %p ") -m "" "$tag_name" 

      - name: Build the singularity container
        if: ${{ env.release_tag != env.latest_tag }}
        run: |
            repo=$(echo "${GITHUB_REPOSITORY/\//-}")
            imagename=$(echo "${{ steps.images.outputs.list }}" | awk -F',' '{print $1}')
            docker pull imagename
            singularity build $(echo "${imagename}" | sed 's#[\.:/]#_#g').sif docker://$imagename

