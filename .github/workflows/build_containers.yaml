name: Build container image for GHCR
on:
  push:
    branches:
      - devel
      - RELEASE_*
  workflow_dispatch:
  schedule:
    - cron: '0 18 * * 5'

jobs:
  make-matrix:
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.matrix.outputs.base }}
    steps:
      - id: matrix
        run: |
          echo 'base<<EOF' >> $GITHUB_OUTPUT
          echo "[{image: 'rocker/r-ver', amdtag: '4.4.1', armtag: '4.4.1', outname: 'r-ver'}," >> $GITHUB_OUTPUT
          echo "{image: 'rocker/rstudio', amdtag: '4.4.1', armtag: '4.4.1', outname: 'bioconductor_docker'}," >> $GITHUB_OUTPUT
          echo "{image: 'rocker/tidyverse', amdtag: '4.4.1', armtag: 'N/A', outname: 'tidyverse'}," >> $GITHUB_OUTPUT
          echo "{image: 'rocker/ml-verse', amdtag: '4.4.1', armtag: 'N/A', outname: 'ml-verse'}," >> $GITHUB_OUTPUT
          echo "{image: 'rocker/shiny', amdtag: '4.4.1', armtag: 'N/A', outname: 'shiny'}]" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  singularity:
    runs-on: ubuntu-latest
    needs:
    - make-matrix
    strategy:
      fail-fast: false
      matrix:
        base: ${{ fromJSON(needs.make-matrix.outputs.base) }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for container image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository_owner }}/${{ matrix.base.outname }}
          tags: |
            type=raw,value={{branch}}

      - name: Set comma-separated list with all repository names
        id: images
        run: |
          IMG=${{ steps.meta.outputs.tags }}
          REPOLIST="docker.io/$IMG"
          REPOLIST="ghcr.io/$IMG,$REPOLIST"
          # Add tag with tag 3.xx as well as RELEASE_3_xx
          if [[ $IMG = *"RELEASE_"* ]]; then
            REPOLIST="$(echo $REPOLIST | sed 's/:RELEASE_3_/:3./g'),$REPOLIST"
          fi
          # Add tag with R version (based on amd64)
          docker pull ${{ matrix.base.image }}:${{ matrix.base.amdtag }}
          RVER=$(docker inspect ${{ matrix.base.image }}:${{ matrix.base.amdtag }} | jq -r '.[].Config.Env[]|select(match("^R_VERSION"))|.[index("=")+1:]')
          REPOLIST="$(echo $REPOLIST | sed "s/,/-R-$RVER,/g")-R-$RVER,$REPOLIST"
                    # Also add alternative without _docker when in name
          if [[ $REPOLIST == *"_docker"* ]]; then
            REPOLIST="$(echo $REPOLIST | sed 's/_docker//g'),$REPOLIST"
          fi
          echo list=$REPOLIST >> $GITHUB_OUTPUT
          imagename="$(echo "$REPOLIST" | awk -F',' '{print $1}')"
          echo $imagename
          docker pull "$imagename"
          (mkdir -p /tmp/sing && cd /tmp/sing && docker save -o image.tar $imagename)
          
      - uses: singularityhub/install-singularity@main

      - name: Define Repository Name and Release Version
        run: |
          repo=$(echo "${GITHUB_REPOSITORY/\//-}")
          echo "reponame=$repo" >> $GITHUB_ENV
          echo "release_tag=$(echo '${{ steps.images.outputs.list }}' | awk -F',' '{print $1}' | sed 's#[\.:/]#_#g')" >> $GITHUB_ENV

      - name: Docker2Singularity
        id: sing
        run: |
            cd /tmp/sing
            sifname="$(echo "$imagename" | sed 's#[\.:/]#_#g').sif"
            singularity build $sifname docker-archive://image.tar
            echo sifname=$sifname >> $GITHUB_OUTPUT
            
      - name: Login and Deploy Container
        run: |         
          echo ${{ secrets.GITHUB_TOKEN }} | singularity remote login -u ${{ secrets.GHCR_USERNAME }} --password-stdin oras://ghcr.io
          singularity push /tmp/sing/${{ steps.sing.outputs.sifname }} oras://ghcr.io/${GITHUB_REPOSITORY}:${tag}

